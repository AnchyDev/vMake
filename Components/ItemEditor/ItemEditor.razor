@using vMake.Database.Types
@using vMake.Extensions

<div class="vmake-panel-h">
    <div class="editor-group-vertical" style="flex: 7">
        <div class="editor-group-horizontal">
            <label class="editor-group-item">
                Name: <InputText @bind-Value="Template!.Name" />
            </label>
            <label class="editor-group-item">
                Description: <InputText @bind-Value="Template!.Description" />
            </label>
            <label class="editor-group-item">
                Item Level: <InputNumber @bind-Value="Template!.ItemLevel" />
            </label>
            <label class="editor-group-item">
                Required Level: <InputNumber @bind-Value="Template!.RequiredLevel" />
            </label>
            <label>
                Bonding
                <InputSelect @bind-Value="Template!.Bonding">
                    <option checked="@(Template.Bonding == MangosItemBonding.None)"
                            value="@MangosItemBonding.None">
                        None
                    </option>
                    <option checked="@(Template.Bonding == MangosItemBonding.BindOnPickup)"
                            value="@MangosItemBonding.BindOnPickup">
                        Bind on Pickup
                    </option>
                    <option checked="@(Template.Bonding == MangosItemBonding.BindOnEquip)"
                            value="@MangosItemBonding.BindOnEquip">
                        Bind on Equip
                    </option>
                    <option checked="@(Template.Bonding == MangosItemBonding.BindOnUse)"
                            value="@MangosItemBonding.BindOnUse">
                        Bind on Use
                    </option>
                    <option checked="@(Template.Bonding == MangosItemBonding.Quest)"
                            value="@MangosItemBonding.Quest">
                        Quest Item
                    </option>
                </InputSelect>
            </label>
            <label>
                Quality
                <InputSelect @bind-Value="Template!.Quality">
                    <option checked="@(Template.Quality == MangosItemQuality.Poor)"
                            value="@MangosItemQuality.Poor">
                        Poor
                    </option>
                    <option checked="@(Template.Quality == MangosItemQuality.Common)"
                            value="@MangosItemQuality.Common">
                        Common
                    </option>
                    <option checked="@(Template.Quality == MangosItemQuality.Uncommon)"
                            value="@MangosItemQuality.Uncommon">
                        Uncommon
                    </option>
                    <option checked="@(Template.Quality == MangosItemQuality.Rare)"
                            value="@MangosItemQuality.Rare">
                        Rare
                    </option>
                    <option checked="@(Template.Quality == MangosItemQuality.Epic)"
                            value="@MangosItemQuality.Epic">
                        Epic
                    </option>
                    <option checked="@(Template.Quality == MangosItemQuality.Legendary)"
                            value="@MangosItemQuality.Legendary">
                        Legendary
                    </option>
                    <option checked="@(Template.Quality == MangosItemQuality.Artifact)"
                            value="@MangosItemQuality.Artifact">
                        Artifact
                    </option>
                </InputSelect>
            </label>
            <label class="editor-group-item">
                Armor: <InputNumber @bind-Value="Template!.Armor" />
            </label>
        </div>

        <div class="editor-group-horizontal">
            <div class="editor-group-item">
                <span style="align-self: center">Stat 1</span>
                <ItemEditorStat StatType="Template.StatType1" StatValue="Template.StatValue1" 
                        OnValueChanged="value => Template.StatValue1 = value"
                        OnTypeChanged="type => Template.StatType1 = type"/>
            </div>

            <div class="editor-group-item">
                <span style="align-self: center">Stat 2</span>
                <ItemEditorStat StatType="Template.StatType2" StatValue="Template.StatValue2"
                                OnValueChanged="value => Template.StatValue2 = value"
                                OnTypeChanged="type => Template.StatType2 = type" />
            </div>

            <div class="editor-group-item">
                <span style="align-self: center">Stat 3</span>
                <ItemEditorStat StatType="Template.StatType3" StatValue="Template.StatValue3"
                                OnValueChanged="value => Template.StatValue3 = value"
                                OnTypeChanged="type => Template.StatType3 = type" />
            </div>

            <div class="editor-group-item">
                <span style="align-self: center">Stat 4</span>
                <ItemEditorStat StatType="Template.StatType4" StatValue="Template.StatValue4"
                                OnValueChanged="value => Template.StatValue4 = value"
                                OnTypeChanged="type => Template.StatType4 = type" />
            </div>

            <div class="editor-group-item">
                <span style="align-self: center">Stat 5</span>
                <ItemEditorStat StatType="Template.StatType5" StatValue="Template.StatValue5"
                                OnValueChanged="value => Template.StatValue5 = value"
                                OnTypeChanged="type => Template.StatType5 = type" />
            </div>

            <div class="editor-group-item">
                <span style="align-self: center">Stat 6</span>
                <ItemEditorStat StatType="Template.StatType6" StatValue="Template.StatValue6"
                                OnValueChanged="value => Template.StatValue6 = value"
                                OnTypeChanged="type => Template.StatType6 = type" />
            </div>

            <div class="editor-group-item">
                <span style="align-self: center">Stat 7</span>
                <ItemEditorStat StatType="Template.StatType7" StatValue="Template.StatValue7"
                                OnValueChanged="value => Template.StatValue7 = value"
                                OnTypeChanged="type => Template.StatType7 = type" />
            </div>

            <div class="editor-group-item">
                <span style="align-self: center">Stat 8</span>
                <ItemEditorStat StatType="Template.StatType8" StatValue="Template.StatValue8"
                                OnValueChanged="value => Template.StatValue8 = value"
                                OnTypeChanged="type => Template.StatType8 = type" />
            </div>

            <div class="editor-group-item">
                <span style="align-self: center">Stat 9</span>
                <ItemEditorStat StatType="Template.StatType9" StatValue="Template.StatValue9" 
                        OnValueChanged="value => Template.StatValue9 = value"
                        OnTypeChanged="type => Template.StatType9 = type"/>
            </div>

            <div class="editor-group-item">
                <span style="align-self: center">Stat 10</span>
                <ItemEditorStat StatType="Template.StatType10" StatValue="Template.StatValue10"
                                OnValueChanged="value => Template.StatValue10 = value"
                                OnTypeChanged="type => Template.StatType10 = type" />
            </div>
        </div>

        <div class="editor-group-horizontal">
            <div class="editor-group-item">
                <span style="align-self: center">Spell 1</span>
                <ItemEditorSpell SpellEntry="Template.SpellId1" SpellTrigger="Template.SpellTrigger1"
                                SpellEntryChanged="value => Template.SpellId1 = value"
                                SpellTriggerChanged="type => Template.SpellTrigger1 = type" />
            </div>
            <div class="editor-group-item">
                <span style="align-self: center">Spell 2</span>
                <ItemEditorSpell SpellEntry="Template.SpellId2" SpellTrigger="Template.SpellTrigger2"
                                 SpellEntryChanged="value => Template.SpellId2 = value"
                                 SpellTriggerChanged="type => Template.SpellTrigger2 = type" />
            </div>
            <div class="editor-group-item">
                <span style="align-self: center">Spell 3</span>
                <ItemEditorSpell SpellEntry="Template.SpellId3" SpellTrigger="Template.SpellTrigger3"
                                 SpellEntryChanged="value => Template.SpellId3 = value"
                                 SpellTriggerChanged="type => Template.SpellTrigger3 = type" />
            </div>
            <div class="editor-group-item">
                <span style="align-self: center">Spell 4</span>
                <ItemEditorSpell SpellEntry="Template.SpellId4" SpellTrigger="Template.SpellTrigger4"
                                SpellEntryChanged="value => Template.SpellId4 = value"
                                SpellTriggerChanged="type => Template.SpellTrigger4 = type" />
            </div>
            <div class="editor-group-item">
                <span style="align-self: center">Spell 5</span>
                <ItemEditorSpell SpellEntry="Template.SpellId5" SpellTrigger="Template.SpellTrigger5"
                                 SpellEntryChanged="value => Template.SpellId5 = value"
                                 SpellTriggerChanged="type => Template.SpellTrigger5 = type" />
            </div>
        </div>

        <button @onclick="UpdateItemAsync">Update</button>

        <span class="alert-info">@Status</span>
    </div>
    <div style="flex: 3">
        <ItemTooltip Template="Template" />
    </div>
</div>