@using vMake.Database.Types
@using vMake.Extensions

@if(this.Template is not null)
{
    <div class="vmake-item-tooltip">
        <span id="tooltip-name" style="color: #@(this.Template.ItemTemplate.Quality.GetHexColor())">
            @this.Template.ItemTemplate.Name
        </span>

        <span id="tooltip-itemlevel" style="color: #E3BF00">
            Item Level @this.Template.ItemTemplate.ItemLevel
        </span>

        <span id="tooltip-bonding" class="@(this.Template.ItemTemplate.Bonding == MangosItemBonding.None ? "hide" : "")">
            @this.Template.ItemTemplate.Bonding.GetBondingText()
        </span>

        <div class="tooltip-multiline" style="display: flex; flex-direction: row">
            <span style="flex: 1;" id="tooltip-invtype" class="@(this.Template.ItemTemplate.InventoryType == MangosInventoryType.NotEquipable ? "hide" : "")">
                @this.Template.ItemTemplate.InventoryType.GetInventoryTypeText()
            </span>
            <span style="flex: 1;text-align: end;">
                @this.Template.ItemTemplate.ItemClass.GetSubClassText(this.Template.ItemTemplate.ItemSubClass)
            </span>
        </div>

        <span id="tooltip-armor" class="@(this.Template.ItemTemplate.Armor < 1 ? "hide" : "")">
            @this.Template.ItemTemplate.Armor Armor
        </span>

        @{
            var stats = this.Template.ItemTemplate.GetStats();

            foreach (var stat in stats)
            {
                <div class="@(stat.Type == MangosItemStatType.None ? "hide" : "")">
                    <span>@(stat.Value > 0 ? "+" : "-")@(Math.Abs(stat.Value))</span>
                    <span>@stat.Type</span>
                </div>
            }
        }

        <span id="tooltip-reqlevel" class="@(this.Template.ItemTemplate.RequiredLevel < 1 ? "hide" : "")">
            Requires Level @this.Template.ItemTemplate.RequiredLevel
        </span>

        @{
            var spells = this.Template.ItemTemplate.GetSpells(DbContext);

            foreach (var spell in spells)
            {
                if(spell.Entry == 0)
                {
                    continue;
                }

                if(string.IsNullOrWhiteSpace(spell.Description))
                {
                    <div style="color: #FF0000">
                        <span>@spell.Trigger.GetTriggerText(): </span>
                        <span>This spell has no description.</span>
                    </div>
                }
                else
                {
                    <div style="color: #00FF00">
                        <span>@spell.Trigger.GetTriggerText(): </span>
                        <span>@spell.Description</span>
                    </div>
                }
            }
        }

        <span id="tooltip-description" style="color: #E1D474" class="@(string.IsNullOrWhiteSpace(this.Template.ItemTemplate.Description) ? "hide" : "")">
            "@this.Template.ItemTemplate.Description"
        </span>
    </div>
}
else
{
    <span class="alert-danger">Tooltip Template is null.</span>
}