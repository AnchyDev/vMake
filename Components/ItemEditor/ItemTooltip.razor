@using vMake.Database.Types
@using vMake.Extensions

@if(this.Template is not null)
{
    <div class="vmake-item-tooltip">
        <span style="color: #@(this.Template.ItemTemplate.Quality.ToHexColor())">
            @this.Template.ItemTemplate.Name
        </span>

        <span style="color: #E3BF00">
            Item Level @this.Template.ItemTemplate.ItemLevel
        </span>

        @if(this.Template.ItemTemplate.Flags.HasFlag(MangosItemFlags.ITEM_FLAG_CONJURED))
        {
            <span>Conjured Item</span>
        }

        @if (this.Template.ItemTemplate.Bonding != MangosItemBonding.None)
        {
            <span>
                @this.Template.ItemTemplate.Bonding.ToDisplayText()
            </span>
        }

        @if(this.Template.ItemTemplate.MaxCount > 0)
        {
            <span>
                Unique @(this.Template.ItemTemplate.MaxCount > 1 ? $"({this.Template.ItemTemplate.MaxCount})" : "")
            </span>
        }

        @if(this.Template.ItemTemplate.InventoryType != MangosInventoryType.NotEquipable)
        {
            <div style="display: flex; flex-direction: row">
                <span style="flex: 1;" class="@(this.Template.ItemTemplate.InventoryType == MangosInventoryType.NotEquipable ? "hide" : "")">
                    @this.Template.ItemTemplate.InventoryType.ToDisplayText()
                </span>
                <span style="flex: 1;text-align: end;">
                    @this.Template.ItemTemplate.ItemClass.ToDisplayText(this.Template.ItemTemplate.ItemSubClass)
                </span>
            </div>
        }

        @if(this.Template.ItemTemplate.ItemClass == MangosItemClass.Weapon &&
            this.Template.ItemTemplate.DmgMax1 > 0)
        {
            <div style="display: flex; flex-direction: row">
                <span style="flex: 1;" class="@(this.Template.ItemTemplate.InventoryType == MangosInventoryType.NotEquipable ? "hide" : "")">
                    @this.Template.ItemTemplate.DmgMin1 - @this.Template.ItemTemplate.DmgMax1 @(this.Template.ItemTemplate.DmgType1 != MangosItemDamageType.Physical ? this.Template.ItemTemplate.DmgType1 : "") Damage
                </span>
                <span>
                    Speed @(((decimal)this.Template.ItemTemplate.Delay / 1000).ToString("0.00"))
                </span>
            </div>
        }

        @if (this.Template.ItemTemplate.ItemClass == MangosItemClass.Weapon &&
            this.Template.ItemTemplate.DmgMax2 > 0)
        {
            <span style="flex: 1;" class="@(this.Template.ItemTemplate.InventoryType == MangosInventoryType.NotEquipable ? "hide" : "")">
                +@this.Template.ItemTemplate.DmgMin2 - @this.Template.ItemTemplate.DmgMax2 @(this.Template.ItemTemplate.DmgType2 != MangosItemDamageType.Physical ? this.Template.ItemTemplate.DmgType2 : "") Damage
            </span>
        }

        @if (this.Template.ItemTemplate.ItemClass == MangosItemClass.Weapon &&
       this.Template.ItemTemplate.DmgMax3 > 0)
        {
            <span style="flex: 1;" class="@(this.Template.ItemTemplate.InventoryType == MangosInventoryType.NotEquipable ? "hide" : "")">
                +@this.Template.ItemTemplate.DmgMin3 - @this.Template.ItemTemplate.DmgMax3 @(this.Template.ItemTemplate.DmgType3 != MangosItemDamageType.Physical ? this.Template.ItemTemplate.DmgType3 : "") Damage
            </span>
        }

        @if (this.Template.ItemTemplate.ItemClass == MangosItemClass.Weapon &&
            this.Template.ItemTemplate.DmgMax4 > 0)
        {
            <span style="flex: 1;" class="@(this.Template.ItemTemplate.InventoryType == MangosInventoryType.NotEquipable ? "hide" : "")">
                +@this.Template.ItemTemplate.DmgMin4 - @this.Template.ItemTemplate.DmgMax4 @(this.Template.ItemTemplate.DmgType4 != MangosItemDamageType.Physical ? this.Template.ItemTemplate.DmgType4 : "") Damage
            </span>
        }

        @if (this.Template.ItemTemplate.ItemClass == MangosItemClass.Weapon &&
            this.Template.ItemTemplate.DmgMax5 > 0)
        {
            <span style="flex: 1;" class="@(this.Template.ItemTemplate.InventoryType == MangosInventoryType.NotEquipable ? "hide" : "")">
                +@this.Template.ItemTemplate.DmgMin5 - @this.Template.ItemTemplate.DmgMax5 @(this.Template.ItemTemplate.DmgType5 != MangosItemDamageType.Physical ? this.Template.ItemTemplate.DmgType5 : "") Damage
            </span>
        }

        @{
            if(this.Template.ItemTemplate.InventoryType == MangosInventoryType.Ammo)
            {
                var dps = (this.Template.ItemTemplate.DmgMin1 + this.Template.ItemTemplate.DmgMax1) / 2f;
                if (dps > 0)
                {
                    <span>Adds @dps.ToString("##.#") damage per second</span>
                }
            }
            else
            {
                var dps = this.Template.ItemTemplate.GetDps();
                if (dps > 0)
                {
                    <span>(@dps.ToString("##.0") damage per second)</span>
                }
            }
        }

        @if (this.Template.ItemTemplate.Armor != 0)
        {
            <span>
                @this.Template.ItemTemplate.Armor Armor
            </span>            
        }

        @if(this.Template.ItemTemplate.Block > 0)
        {
            <span>
                @this.Template.ItemTemplate.Block Block
            </span>
        }

        @{
            var stats = this.Template.ItemTemplate.GetStats();

            foreach (var stat in stats)
            {
                if(stat.Type == MangosItemStatType.None)
                {
                    continue;
                }

                <div>
                    <span>@(stat.Value > 0 ? "+" : "-")@(Math.Abs(stat.Value))</span>
                    <span>@stat.Type</span>
                </div>
            }
        }

        @{
            var resistances = this.Template.ItemTemplate.GetResists();

            foreach (var resist in resistances)
            {
                if(resist.Value == 0)
                {
                    continue;
                }

                <div>
                    <span>@(resist.Value > 0 ? "+" : "-")@Math.Abs(resist.Value) @resist.Key.ToString() Resistance</span>
                </div>
            }
        }

        @if (Template.ItemTemplate.DurabilityMax > 0)
        {
            <span>
                Durability @Template.ItemTemplate.DurabilityMax / @Template.ItemTemplate.DurabilityMax
            </span>
        }

        @if(Template.ItemTemplate.AllowableClass > 0)
        {
            var allowableClasses = Template.ItemTemplate.GetAllowableClasses();
            int count = 0;

            <div style="display: flex; flex-direction: row; gap: 0.25rem">
                <span>Classes:</span>
                @foreach(var allowableClass in allowableClasses)
                {
                    count++;

                    <span>
                        <span style="color: #@(allowableClass.ToHexColor())">@allowableClass.ToString()</span>

                        @if(allowableClasses.Count > 1 && count < allowableClasses.Count)
                        {
                            <span>,</span>
                        }
                    </span>
                }
            </div>
        }

        @if (this.Template.ItemTemplate.RequiredLevel > 0)
        {
            <span>
                Requires Level @this.Template.ItemTemplate.RequiredLevel
            </span>
        }

        @{
            var spells = this.Template.ItemSpells;

            foreach (var spell in spells)
            {
                if(spell.Entry == 0)
                {
                    continue;
                }

                if(string.IsNullOrWhiteSpace(spell.Description))
                {
                    <div style="color: #FF0000">
                        <span>@spell.Trigger.ToDisplayText(): </span>
                        <span>This spell has no description.</span>
                    </div>
                }
                else
                {
                    <div style="color: #00FF00">
                        <span>@spell.Trigger.ToDisplayText(): </span>
                        <span>@spell.Description</span>
                    </div>
                }
            }
        }

        @if (!string.IsNullOrWhiteSpace(this.Template.ItemTemplate.Description))
        {
            <span style="color: #E1D474">
                "@this.Template.ItemTemplate.Description"
            </span>
        }

        @if(this.Template.ItemTemplate.SellPrice > 0)
        {
            var currency = MangosCurrency.ToCurrency(this.Template.ItemTemplate.SellPrice);

            <div style="display: flex; flex-direction: row; gap: 0.25rem; align-items: center">
                <span>Sell Price:</span>
                @if(currency.Gold > 0)
                {
                    <div style="display: flex; flex-direction: row; align-items: center; gap: 0.1rem">
                        <span>@currency.Gold</span>
                        <img src="assets/images/currency/gold.png" style="width: 1rem; height: 1rem" />
                    </div>
                }
                @if (currency.Silver > 0)
                {
                    <div style="display: flex; flex-direction: row; align-items: center; gap: 0.1rem">
                        <span>@currency.Silver</span>
                        <img src="assets/images/currency/silver.png" style="width: 1rem; height: 1rem" />
                    </div>
                }
                @if (currency.Copper > 0)
                {
                    <div style="display: flex; flex-direction: row; align-items: center; gap: 0.1rem">
                        <span>@currency.Copper</span>
                        <img src="assets/images/currency/copper.png" style="width: 1rem; height: 1rem" />
                    </div>
                }
            </div>
        }

        @if (this.Template.ItemTemplate.BuyPrice > 0)
        {
            var currency = MangosCurrency.ToCurrency(this.Template.ItemTemplate.BuyPrice);

            <div style="display: flex; flex-direction: row; gap: 0.25rem; align-items: center">
                <span>Buy Price:</span>
                @if (currency.Gold > 0)
                {
                    <div style="display: flex; flex-direction: row; align-items: center; gap: 0.1rem">
                        <span>@currency.Gold</span>
                        <img src="assets/images/currency/gold.png" style="width: 1rem; height: 1rem" />
                    </div>
                }
                @if (currency.Silver > 0)
                {
                    <div style="display: flex; flex-direction: row; align-items: center; gap: 0.1rem">
                        <span>@currency.Silver</span>
                        <img src="assets/images/currency/silver.png" style="width: 1rem; height: 1rem" />
                    </div>
                }
                @if (currency.Copper > 0)
                {
                    <div style="display: flex; flex-direction: row; align-items: center; gap: 0.1rem">
                        <span>@currency.Copper</span>
                        <img src="assets/images/currency/copper.png" style="width: 1rem; height: 1rem" />
                    </div>
                }
            </div>
        }
    </div>
}
else
{
    <span class="alert-danger">Tooltip Template is null.</span>
}